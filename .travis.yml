language: python
python:
  - "3.8"

# 安装依赖包
before_install:
  - pip install coverage pytest influxdb
  - sudo apt-get install jq

# 代码规范扫描
addons:
  sonarcloud:
    organization: "bugazelle"
    token:
      secure: "$sonar_token"

# 编译 & 安装，单元测试，单元测试覆盖率，代码规范扫描
jobs:
  include:
    - stage: "unit_tests"
      name: "单元测试"
      script: "pytest tests/"
    - stage: "build_and_install"
      name: "编译 & 安装"
      script: "python setup.py install"
    - stage: "sonar_scan"
      name: "代码规范扫描"
      script: >-
        coverage run --source=src/ExportCsvToInflux -m pytest --junitxml="reports/junit-report.xml" tests/ &&
        coverage xml -i -o reports/coverage.xml &&
        coverage report &&
        sonar-scanner |& tee -a sonar_scanner.log &&
        cat sonar_scanner.log &&
        sonar_task_api=$(grep -o 'https://sonarcloud.io/api/ce/task?id=.*' sonar_scanner.log) &&
        curl -u $sonar_token: $sonar_task_api -o sonar_result.json &&
        cat sonar_result.json &&
        sonar_scan_status = $(jq -r ".task.status" sonar_result.json) &&
        if [ $sonar_scan_status == "FAILED" ]
        then
          exit 1;
        else
          sonar_analysis_id=$(jq -r ".task.analysisId" sonar_result.json);
          curl -u $sonar_token: https://sonarcloud.io/api/qualitygates/project_status?analysisId=$sonar_analysis_id -o sonar_analysis_result.json;
          cat sonar_analysis_result.json;
          project_status=$(jq -r ".projectStatus.status" sonar_analysis_result.json);
          if [ $project_status == "ERROR" ] then
            exit 1;
          fi
        fi

branches:
  only:
  - ci_demo
